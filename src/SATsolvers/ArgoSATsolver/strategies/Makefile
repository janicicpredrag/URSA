# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/strategies/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2007-2009. Filip Maric, Predrag Janicic
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# This program is inspired by MiniSat solver (C) Een, Sorensson 2003-2006.



pkgdatadir = $(datadir)/argosat
pkglibdir = $(libdir)/argosat
pkgincludedir = $(includedir)/argosat
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = src/strategies
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libstrategies_la_LIBADD =
am_libstrategies_la_OBJECTS = libstrategies_la-RestartStrategy.lo \
	libstrategies_la-RestartStrategyConflictCounting.lo \
	libstrategies_la-RestartStrategyMinisat.lo \
	libstrategies_la-RestartStrategyPicosat.lo \
	libstrategies_la-RestartStrategyLuby.lo \
	libstrategies_la-RestartStrategyFunction.lo \
	libstrategies_la-ForgetStrategy.lo \
	libstrategies_la-ForgetStrategyMinisat.lo \
	libstrategies_la-ForgetStrategyFunction.lo \
	libstrategies_la-ForgetSelectionStrategy.lo \
	libstrategies_la-ForgetSelectionStrategyMinisat.lo \
	libstrategies_la-ForgetSelectionStrategyClauseLength.lo \
	libstrategies_la-LiteralSelectionStrategy.lo \
	libstrategies_la-VariableSelectionStrategy.lo \
	libstrategies_la-VariableSelectionStrategyFirstUndefined.lo \
	libstrategies_la-VariableSelectionStrategyMinisat.lo \
	libstrategies_la-VariableSelectionStrategyRandomDecorator.lo \
	libstrategies_la-LiteralPolaritySelectionStrategy.lo
libstrategies_la_OBJECTS = $(am_libstrategies_la_OBJECTS)
libstrategies_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libstrategies_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libstrategies_la_SOURCES)
DIST_SOURCES = $(libstrategies_la_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/missing --run aclocal-1.10
AMTAR = ${SHELL} /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/missing --run autoconf
AUTOHEADER = ${SHELL} /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/missing --run autoheader
AUTOMAKE = ${SHELL} /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wall -Woverloaded-virtual -ansi -pedantic -Wno-strict-aliasing -DNDEBUG -O3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = cp -p
LTLIBOBJS = 
MAKEINFO = ${SHELL} /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NMEDIT = 
OBJEXT = o
PACKAGE = argosat
PACKAGE_BUGREPORT = filip@matf.bg.ac.rs
PACKAGE_NAME = argosat
PACKAGE_STRING = argosat 1.0
PACKAGE_TARNAME = argosat
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.0
abs_builddir = /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/src/strategies
abs_srcdir = /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/src/strategies
abs_top_builddir = /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0
abs_top_srcdir = /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /media/disk/tekuce/InverzneFunkcije/UCompiler/argosat-1.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ../..
top_srcdir = ../..
INCLUDES = -I$(top_srcdir)/src -I$(top_srcdir)/src/auxiliary -I$(top_srcdir)/src/basic-types
noinst_LTLIBRARIES = libstrategies.la
noinst_HEADERS = \
	Activities.hpp					\
	ActivityMeasure.hpp				\
	RestartStrategy.hpp				\
	RestartStrategyNoRestart.hpp			\
	RestartStrategyConflictCounting.hpp		\
	RestartStrategyMinisat.hpp			\
	RestartStrategyPicosat.hpp			\
	RestartStrategyLuby.hpp				\
	RestartStrategyFunction.hpp			\
	ForgetStrategy.hpp				\
	ForgetStrategyNoForget.hpp			\
	ForgetStrategyMinisat.hpp			\
	ForgetStrategyFunction.hpp			\
	ForgetSelectionStrategy.hpp			\
	ForgetSelectionStrategyMinisat.hpp		\
	ForgetSelectionStrategyClauseLength.hpp		\
	LiteralSelectionStrategy.hpp			\
	LiteralSelectionStrategyVariablePolarity.hpp	\
	VariableSelectionStrategy.hpp			\
	VariableSelectionStrategyFirstUndefined.hpp	\
	VariableSelectionStrategyMinisat.hpp		\
	VariableSelectionStrategyRandomDecorator.hpp	\
	LiteralPolaritySelectionStrategy.hpp

libstrategies_la_SOURCES = \
	RestartStrategy.cpp				\
	RestartStrategyConflictCounting.cpp		\
	RestartStrategyMinisat.cpp			\
	RestartStrategyPicosat.cpp			\
	RestartStrategyLuby.cpp				\
	RestartStrategyFunction.cpp			\
	ForgetStrategy.cpp				\
	ForgetStrategyMinisat.cpp			\
	ForgetStrategyFunction.cpp			\
	ForgetSelectionStrategy.cpp			\
	ForgetSelectionStrategyMinisat.cpp		\
	ForgetSelectionStrategyClauseLength.cpp		\
	LiteralSelectionStrategy.cpp			\
	VariableSelectionStrategy.cpp			\
	VariableSelectionStrategyFirstUndefined.cpp	\
	VariableSelectionStrategyMinisat.cpp		\
	VariableSelectionStrategyRandomDecorator.cpp	\
	LiteralPolaritySelectionStrategy.cpp

libstrategies_la_CXXFLAGS = -ffloat-store
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/strategies/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/strategies/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libstrategies.la: $(libstrategies_la_OBJECTS) $(libstrategies_la_DEPENDENCIES) 
	$(libstrategies_la_LINK)  $(libstrategies_la_OBJECTS) $(libstrategies_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libstrategies_la-ForgetSelectionStrategy.Plo
include ./$(DEPDIR)/libstrategies_la-ForgetSelectionStrategyClauseLength.Plo
include ./$(DEPDIR)/libstrategies_la-ForgetSelectionStrategyMinisat.Plo
include ./$(DEPDIR)/libstrategies_la-ForgetStrategy.Plo
include ./$(DEPDIR)/libstrategies_la-ForgetStrategyFunction.Plo
include ./$(DEPDIR)/libstrategies_la-ForgetStrategyMinisat.Plo
include ./$(DEPDIR)/libstrategies_la-LiteralPolaritySelectionStrategy.Plo
include ./$(DEPDIR)/libstrategies_la-LiteralSelectionStrategy.Plo
include ./$(DEPDIR)/libstrategies_la-RestartStrategy.Plo
include ./$(DEPDIR)/libstrategies_la-RestartStrategyConflictCounting.Plo
include ./$(DEPDIR)/libstrategies_la-RestartStrategyFunction.Plo
include ./$(DEPDIR)/libstrategies_la-RestartStrategyLuby.Plo
include ./$(DEPDIR)/libstrategies_la-RestartStrategyMinisat.Plo
include ./$(DEPDIR)/libstrategies_la-RestartStrategyPicosat.Plo
include ./$(DEPDIR)/libstrategies_la-VariableSelectionStrategy.Plo
include ./$(DEPDIR)/libstrategies_la-VariableSelectionStrategyFirstUndefined.Plo
include ./$(DEPDIR)/libstrategies_la-VariableSelectionStrategyMinisat.Plo
include ./$(DEPDIR)/libstrategies_la-VariableSelectionStrategyRandomDecorator.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libstrategies_la-RestartStrategy.lo: RestartStrategy.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-RestartStrategy.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-RestartStrategy.Tpo -c -o libstrategies_la-RestartStrategy.lo `test -f 'RestartStrategy.cpp' || echo '$(srcdir)/'`RestartStrategy.cpp
	mv -f $(DEPDIR)/libstrategies_la-RestartStrategy.Tpo $(DEPDIR)/libstrategies_la-RestartStrategy.Plo
#	source='RestartStrategy.cpp' object='libstrategies_la-RestartStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-RestartStrategy.lo `test -f 'RestartStrategy.cpp' || echo '$(srcdir)/'`RestartStrategy.cpp

libstrategies_la-RestartStrategyConflictCounting.lo: RestartStrategyConflictCounting.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-RestartStrategyConflictCounting.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-RestartStrategyConflictCounting.Tpo -c -o libstrategies_la-RestartStrategyConflictCounting.lo `test -f 'RestartStrategyConflictCounting.cpp' || echo '$(srcdir)/'`RestartStrategyConflictCounting.cpp
	mv -f $(DEPDIR)/libstrategies_la-RestartStrategyConflictCounting.Tpo $(DEPDIR)/libstrategies_la-RestartStrategyConflictCounting.Plo
#	source='RestartStrategyConflictCounting.cpp' object='libstrategies_la-RestartStrategyConflictCounting.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-RestartStrategyConflictCounting.lo `test -f 'RestartStrategyConflictCounting.cpp' || echo '$(srcdir)/'`RestartStrategyConflictCounting.cpp

libstrategies_la-RestartStrategyMinisat.lo: RestartStrategyMinisat.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-RestartStrategyMinisat.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-RestartStrategyMinisat.Tpo -c -o libstrategies_la-RestartStrategyMinisat.lo `test -f 'RestartStrategyMinisat.cpp' || echo '$(srcdir)/'`RestartStrategyMinisat.cpp
	mv -f $(DEPDIR)/libstrategies_la-RestartStrategyMinisat.Tpo $(DEPDIR)/libstrategies_la-RestartStrategyMinisat.Plo
#	source='RestartStrategyMinisat.cpp' object='libstrategies_la-RestartStrategyMinisat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-RestartStrategyMinisat.lo `test -f 'RestartStrategyMinisat.cpp' || echo '$(srcdir)/'`RestartStrategyMinisat.cpp

libstrategies_la-RestartStrategyPicosat.lo: RestartStrategyPicosat.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-RestartStrategyPicosat.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-RestartStrategyPicosat.Tpo -c -o libstrategies_la-RestartStrategyPicosat.lo `test -f 'RestartStrategyPicosat.cpp' || echo '$(srcdir)/'`RestartStrategyPicosat.cpp
	mv -f $(DEPDIR)/libstrategies_la-RestartStrategyPicosat.Tpo $(DEPDIR)/libstrategies_la-RestartStrategyPicosat.Plo
#	source='RestartStrategyPicosat.cpp' object='libstrategies_la-RestartStrategyPicosat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-RestartStrategyPicosat.lo `test -f 'RestartStrategyPicosat.cpp' || echo '$(srcdir)/'`RestartStrategyPicosat.cpp

libstrategies_la-RestartStrategyLuby.lo: RestartStrategyLuby.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-RestartStrategyLuby.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-RestartStrategyLuby.Tpo -c -o libstrategies_la-RestartStrategyLuby.lo `test -f 'RestartStrategyLuby.cpp' || echo '$(srcdir)/'`RestartStrategyLuby.cpp
	mv -f $(DEPDIR)/libstrategies_la-RestartStrategyLuby.Tpo $(DEPDIR)/libstrategies_la-RestartStrategyLuby.Plo
#	source='RestartStrategyLuby.cpp' object='libstrategies_la-RestartStrategyLuby.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-RestartStrategyLuby.lo `test -f 'RestartStrategyLuby.cpp' || echo '$(srcdir)/'`RestartStrategyLuby.cpp

libstrategies_la-RestartStrategyFunction.lo: RestartStrategyFunction.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-RestartStrategyFunction.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-RestartStrategyFunction.Tpo -c -o libstrategies_la-RestartStrategyFunction.lo `test -f 'RestartStrategyFunction.cpp' || echo '$(srcdir)/'`RestartStrategyFunction.cpp
	mv -f $(DEPDIR)/libstrategies_la-RestartStrategyFunction.Tpo $(DEPDIR)/libstrategies_la-RestartStrategyFunction.Plo
#	source='RestartStrategyFunction.cpp' object='libstrategies_la-RestartStrategyFunction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-RestartStrategyFunction.lo `test -f 'RestartStrategyFunction.cpp' || echo '$(srcdir)/'`RestartStrategyFunction.cpp

libstrategies_la-ForgetStrategy.lo: ForgetStrategy.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-ForgetStrategy.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-ForgetStrategy.Tpo -c -o libstrategies_la-ForgetStrategy.lo `test -f 'ForgetStrategy.cpp' || echo '$(srcdir)/'`ForgetStrategy.cpp
	mv -f $(DEPDIR)/libstrategies_la-ForgetStrategy.Tpo $(DEPDIR)/libstrategies_la-ForgetStrategy.Plo
#	source='ForgetStrategy.cpp' object='libstrategies_la-ForgetStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-ForgetStrategy.lo `test -f 'ForgetStrategy.cpp' || echo '$(srcdir)/'`ForgetStrategy.cpp

libstrategies_la-ForgetStrategyMinisat.lo: ForgetStrategyMinisat.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-ForgetStrategyMinisat.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-ForgetStrategyMinisat.Tpo -c -o libstrategies_la-ForgetStrategyMinisat.lo `test -f 'ForgetStrategyMinisat.cpp' || echo '$(srcdir)/'`ForgetStrategyMinisat.cpp
	mv -f $(DEPDIR)/libstrategies_la-ForgetStrategyMinisat.Tpo $(DEPDIR)/libstrategies_la-ForgetStrategyMinisat.Plo
#	source='ForgetStrategyMinisat.cpp' object='libstrategies_la-ForgetStrategyMinisat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-ForgetStrategyMinisat.lo `test -f 'ForgetStrategyMinisat.cpp' || echo '$(srcdir)/'`ForgetStrategyMinisat.cpp

libstrategies_la-ForgetStrategyFunction.lo: ForgetStrategyFunction.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-ForgetStrategyFunction.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-ForgetStrategyFunction.Tpo -c -o libstrategies_la-ForgetStrategyFunction.lo `test -f 'ForgetStrategyFunction.cpp' || echo '$(srcdir)/'`ForgetStrategyFunction.cpp
	mv -f $(DEPDIR)/libstrategies_la-ForgetStrategyFunction.Tpo $(DEPDIR)/libstrategies_la-ForgetStrategyFunction.Plo
#	source='ForgetStrategyFunction.cpp' object='libstrategies_la-ForgetStrategyFunction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-ForgetStrategyFunction.lo `test -f 'ForgetStrategyFunction.cpp' || echo '$(srcdir)/'`ForgetStrategyFunction.cpp

libstrategies_la-ForgetSelectionStrategy.lo: ForgetSelectionStrategy.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-ForgetSelectionStrategy.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-ForgetSelectionStrategy.Tpo -c -o libstrategies_la-ForgetSelectionStrategy.lo `test -f 'ForgetSelectionStrategy.cpp' || echo '$(srcdir)/'`ForgetSelectionStrategy.cpp
	mv -f $(DEPDIR)/libstrategies_la-ForgetSelectionStrategy.Tpo $(DEPDIR)/libstrategies_la-ForgetSelectionStrategy.Plo
#	source='ForgetSelectionStrategy.cpp' object='libstrategies_la-ForgetSelectionStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-ForgetSelectionStrategy.lo `test -f 'ForgetSelectionStrategy.cpp' || echo '$(srcdir)/'`ForgetSelectionStrategy.cpp

libstrategies_la-ForgetSelectionStrategyMinisat.lo: ForgetSelectionStrategyMinisat.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-ForgetSelectionStrategyMinisat.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-ForgetSelectionStrategyMinisat.Tpo -c -o libstrategies_la-ForgetSelectionStrategyMinisat.lo `test -f 'ForgetSelectionStrategyMinisat.cpp' || echo '$(srcdir)/'`ForgetSelectionStrategyMinisat.cpp
	mv -f $(DEPDIR)/libstrategies_la-ForgetSelectionStrategyMinisat.Tpo $(DEPDIR)/libstrategies_la-ForgetSelectionStrategyMinisat.Plo
#	source='ForgetSelectionStrategyMinisat.cpp' object='libstrategies_la-ForgetSelectionStrategyMinisat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-ForgetSelectionStrategyMinisat.lo `test -f 'ForgetSelectionStrategyMinisat.cpp' || echo '$(srcdir)/'`ForgetSelectionStrategyMinisat.cpp

libstrategies_la-ForgetSelectionStrategyClauseLength.lo: ForgetSelectionStrategyClauseLength.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-ForgetSelectionStrategyClauseLength.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-ForgetSelectionStrategyClauseLength.Tpo -c -o libstrategies_la-ForgetSelectionStrategyClauseLength.lo `test -f 'ForgetSelectionStrategyClauseLength.cpp' || echo '$(srcdir)/'`ForgetSelectionStrategyClauseLength.cpp
	mv -f $(DEPDIR)/libstrategies_la-ForgetSelectionStrategyClauseLength.Tpo $(DEPDIR)/libstrategies_la-ForgetSelectionStrategyClauseLength.Plo
#	source='ForgetSelectionStrategyClauseLength.cpp' object='libstrategies_la-ForgetSelectionStrategyClauseLength.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-ForgetSelectionStrategyClauseLength.lo `test -f 'ForgetSelectionStrategyClauseLength.cpp' || echo '$(srcdir)/'`ForgetSelectionStrategyClauseLength.cpp

libstrategies_la-LiteralSelectionStrategy.lo: LiteralSelectionStrategy.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-LiteralSelectionStrategy.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-LiteralSelectionStrategy.Tpo -c -o libstrategies_la-LiteralSelectionStrategy.lo `test -f 'LiteralSelectionStrategy.cpp' || echo '$(srcdir)/'`LiteralSelectionStrategy.cpp
	mv -f $(DEPDIR)/libstrategies_la-LiteralSelectionStrategy.Tpo $(DEPDIR)/libstrategies_la-LiteralSelectionStrategy.Plo
#	source='LiteralSelectionStrategy.cpp' object='libstrategies_la-LiteralSelectionStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-LiteralSelectionStrategy.lo `test -f 'LiteralSelectionStrategy.cpp' || echo '$(srcdir)/'`LiteralSelectionStrategy.cpp

libstrategies_la-VariableSelectionStrategy.lo: VariableSelectionStrategy.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-VariableSelectionStrategy.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-VariableSelectionStrategy.Tpo -c -o libstrategies_la-VariableSelectionStrategy.lo `test -f 'VariableSelectionStrategy.cpp' || echo '$(srcdir)/'`VariableSelectionStrategy.cpp
	mv -f $(DEPDIR)/libstrategies_la-VariableSelectionStrategy.Tpo $(DEPDIR)/libstrategies_la-VariableSelectionStrategy.Plo
#	source='VariableSelectionStrategy.cpp' object='libstrategies_la-VariableSelectionStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-VariableSelectionStrategy.lo `test -f 'VariableSelectionStrategy.cpp' || echo '$(srcdir)/'`VariableSelectionStrategy.cpp

libstrategies_la-VariableSelectionStrategyFirstUndefined.lo: VariableSelectionStrategyFirstUndefined.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-VariableSelectionStrategyFirstUndefined.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-VariableSelectionStrategyFirstUndefined.Tpo -c -o libstrategies_la-VariableSelectionStrategyFirstUndefined.lo `test -f 'VariableSelectionStrategyFirstUndefined.cpp' || echo '$(srcdir)/'`VariableSelectionStrategyFirstUndefined.cpp
	mv -f $(DEPDIR)/libstrategies_la-VariableSelectionStrategyFirstUndefined.Tpo $(DEPDIR)/libstrategies_la-VariableSelectionStrategyFirstUndefined.Plo
#	source='VariableSelectionStrategyFirstUndefined.cpp' object='libstrategies_la-VariableSelectionStrategyFirstUndefined.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-VariableSelectionStrategyFirstUndefined.lo `test -f 'VariableSelectionStrategyFirstUndefined.cpp' || echo '$(srcdir)/'`VariableSelectionStrategyFirstUndefined.cpp

libstrategies_la-VariableSelectionStrategyMinisat.lo: VariableSelectionStrategyMinisat.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-VariableSelectionStrategyMinisat.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-VariableSelectionStrategyMinisat.Tpo -c -o libstrategies_la-VariableSelectionStrategyMinisat.lo `test -f 'VariableSelectionStrategyMinisat.cpp' || echo '$(srcdir)/'`VariableSelectionStrategyMinisat.cpp
	mv -f $(DEPDIR)/libstrategies_la-VariableSelectionStrategyMinisat.Tpo $(DEPDIR)/libstrategies_la-VariableSelectionStrategyMinisat.Plo
#	source='VariableSelectionStrategyMinisat.cpp' object='libstrategies_la-VariableSelectionStrategyMinisat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-VariableSelectionStrategyMinisat.lo `test -f 'VariableSelectionStrategyMinisat.cpp' || echo '$(srcdir)/'`VariableSelectionStrategyMinisat.cpp

libstrategies_la-VariableSelectionStrategyRandomDecorator.lo: VariableSelectionStrategyRandomDecorator.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-VariableSelectionStrategyRandomDecorator.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-VariableSelectionStrategyRandomDecorator.Tpo -c -o libstrategies_la-VariableSelectionStrategyRandomDecorator.lo `test -f 'VariableSelectionStrategyRandomDecorator.cpp' || echo '$(srcdir)/'`VariableSelectionStrategyRandomDecorator.cpp
	mv -f $(DEPDIR)/libstrategies_la-VariableSelectionStrategyRandomDecorator.Tpo $(DEPDIR)/libstrategies_la-VariableSelectionStrategyRandomDecorator.Plo
#	source='VariableSelectionStrategyRandomDecorator.cpp' object='libstrategies_la-VariableSelectionStrategyRandomDecorator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-VariableSelectionStrategyRandomDecorator.lo `test -f 'VariableSelectionStrategyRandomDecorator.cpp' || echo '$(srcdir)/'`VariableSelectionStrategyRandomDecorator.cpp

libstrategies_la-LiteralPolaritySelectionStrategy.lo: LiteralPolaritySelectionStrategy.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -MT libstrategies_la-LiteralPolaritySelectionStrategy.lo -MD -MP -MF $(DEPDIR)/libstrategies_la-LiteralPolaritySelectionStrategy.Tpo -c -o libstrategies_la-LiteralPolaritySelectionStrategy.lo `test -f 'LiteralPolaritySelectionStrategy.cpp' || echo '$(srcdir)/'`LiteralPolaritySelectionStrategy.cpp
	mv -f $(DEPDIR)/libstrategies_la-LiteralPolaritySelectionStrategy.Tpo $(DEPDIR)/libstrategies_la-LiteralPolaritySelectionStrategy.Plo
#	source='LiteralPolaritySelectionStrategy.cpp' object='libstrategies_la-LiteralPolaritySelectionStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libstrategies_la_CXXFLAGS) $(CXXFLAGS) -c -o libstrategies_la-LiteralPolaritySelectionStrategy.lo `test -f 'LiteralPolaritySelectionStrategy.cpp' || echo '$(srcdir)/'`LiteralPolaritySelectionStrategy.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
